{
  "configs": {
    "type": "SiddhiStoreDataProvider",
    "config": {
      "siddhiApp": "@App:name(\"MediatorStatPerAggregation\") define stream MediatorStatStreamTemp (meta_tenantId int, entryPoint string, entryPointHashcode string, componentId string, hashCode string, componentName string, componentType string, duration long, faultCount int, startTime long); @store(type = 'rdbms', datasource = 'EI_ANALYTICS') define aggregation MediatorStat from MediatorStatStreamTemp select meta_tenantId, entryPoint, entryPointHashcode, componentId, hashCode, componentName, componentType, sum(duration) as totalDuration, min(duration) as minDuration, max(duration) as maxDuration, count() as noOfInvocation, sum(faultCount) as faultCount, startTime group by meta_tenantId, componentId, componentName, componentType, entryPoint, entryPointHashcode, hashCode aggregate by startTime every sec ... years;",
      "queryData":{
        "query": "from MediatorStat on entryPointHashcode == {{hashcode}} AND meta_tenantId == {{tenantId}} within {{timeFrom}}, {{timeTo}} per {{timeUnit}} select meta_tenantId, entryPoint as entryPoint, entryPointHashcode, componentId, hashCode, componentName, componentType as componentType, sum(totalDuration) as totalDuration, minDuration, max(maxDuration) as maxDuration, sum(noOfInvocation) as invocations, sum(faultCount) as faults, startTime group by componentId limit 10000"
      },
      "publishingInterval": 60
    }
  }
}